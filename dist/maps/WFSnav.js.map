{"version":3,"file":"../js/WFSnav.js","names":["WFSnav","constructor","config","this","numberOptions","dataAttrbox","dataAttrlink","options","conteiner","activeClass","activeClassElement","elements","duration","typePath","navHeight","marginNav","showDown","showUp","mobileFinish","mobileNavHeight","mobileMarginNav","mobileCloseOpenEl","mobileCloseCl","init","validateOption","flagValidation","forEach","numberOption","Number","isFinite","isNaN","alert","document","querySelector","WFSnavBody","body","querySelectorAll","navLinkLength","length","navLinkCount","console","log","windowHeight","window","innerHeight","bodyHeight","offsetHeight","conteinerHight","closeOpenLink","activeFlag","createIventOpenClose","checkMobile","setupGoto","allBox","Array","from","element","i","push","getAttribute","scrollWindow","resizeWindow","actionOnScroll","scrollWindowTo","top","scrollTo","left","behavior","windowWidth","innerWidth","space1","space2","mobile","space","controllClass","undefined","avtiveElement","classList","contains","remove","add","removeClassActive","positionTop","scrollY","scrollFlag","lastScrollTop","visibleFirst","notViseble","goToBoxPosition","getBoundingClientRect","y","height","avtiveElementCount","onScroll","navElements","sections","addEventListener","resizeWindowFunction","_this","_time","clearTimeout","setTimeout","clientHeight","fingIdElement","trigger","attrElement","fPrefix","substring","elId","slice","scrollToBox","goToBox","getElementById","clickElement","event","preventDefault","closeMobileNav","listenersElement","Map","setAttribute","handleClick","set","openMobileNav","clickOpenClose","listeners","destroyIventOpenClose","get","removeEventListener","delete","destroyElements","removeAttribute","destroyBox","destroy"],"sources":["WFSnav.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * WebFullSet WFSnav.js\r\n * \r\n * NAV GO TO BOX SCROLL PLUGIN\r\n * \r\n * Licensed under MIT\r\n * --------------------------------------------------------------------------\r\n * OUR CONTACTS\r\n * Telegram: https://t.me/hjvf_07\r\n * Mail: onlycssclub@gmail.com\r\n * --------------------------------------------------------------------------\r\n * Vercion: 1.0.1\r\n * Date:    04.01.2025\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nclass WFSnav {\r\n    constructor(config){\r\n        this.config = config;\r\n        this.numberOptions = ['duration', 'marginNav', 'showDown', 'showUp', 'mobileFinish', 'mobileMarginNav'];\r\n        this.dataAttrbox = `data-nav`;\r\n        this.dataAttrlink = `data-nav-link`;\r\n        this.options = {\r\n            conteiner: '#header',\r\n            activeClass: 'active',\r\n            activeClassElement: 'elements',\r\n            elements: '> li > a',\r\n            duration: 1300,\r\n            typePath: '#',\r\n            navHeight: true,\r\n            marginNav: 0,\r\n            showDown: 30,\r\n            showUp: 50,\r\n            mobileFinish: 992,\r\n            mobileNavHeight: false,\r\n            mobileMarginNav: 0,\r\n            mobileCloseOpenEl: '.close-momile-nav',\r\n            mobileCloseCl: 'open-mobile-menu'\r\n        }\r\n        \r\n        if(typeof config === 'object'){\r\n            this.options = {...this.options, ...config}\r\n        }\r\n\r\n        this.init();\r\n    }\r\n    \r\n    init(){\r\n        this.#validateOption();\r\n    }\r\n\r\n    #validateOption(){\r\n        this.flagValidation = true;\r\n\r\n        this.numberOptions.forEach(numberOption => {\r\n            if(!Number.isFinite(this.options[numberOption]) && !Number.isNaN(this.options[numberOption]) ) {\r\n                alert(`WFSnav ${numberOption} = ${this.options[numberOption]} - should be a number`)\r\n                this.flagValidation = false;\r\n            }\r\n        });\r\n\r\n        if(this.flagValidation){\r\n            \r\n            this.conteiner = document.querySelector(this.options.conteiner);\r\n\r\n            if(this.conteiner){\r\n                this.WFSnavBody = document.body;\r\n                this.elements = this.conteiner.querySelectorAll(this.options.elements);\r\n                this.navLinkLength = this.elements.length;\r\n                this.navLinkCount = this.navLinkLength - 1;\r\n\r\n                if(this.navLinkLength > 0){\r\n                    console.log(`!!! START - WFSnav !!!`);\r\n                    this.windowHeight = window.innerHeight;\r\n                    this.bodyHeight = this.WFSnavBody.offsetHeight;\r\n                    this.conteinerHight = this.conteiner.offsetHeight;\r\n                    this.closeOpenLink = this.WFSnavBody.querySelectorAll(this.options.mobileCloseOpenEl);\r\n                    this.activeFlag = false;\r\n    \r\n                    if(this.closeOpenLink.length > 0) this.#createIventOpenClose();\r\n                    this.#checkMobile();\r\n                    this.#setupGoto();\r\n                    this.allBox = [];\r\n    \r\n                    Array.from(this.elements).forEach((element, i) => {\r\n                        this.allBox.push(this.WFSnavBody.querySelector(element.getAttribute('href')))\r\n                    });\r\n    \r\n                    this.#scrollWindow();\r\n                    this.#resizeWindow();\r\n                    this.#actionOnScroll();\r\n                }else {\r\n                    console.log(`!!! WFSnav : no items found !!!`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #scrollWindowTo(top){\r\n        window.scrollTo({\r\n            top: top,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    #checkMobile(){\r\n        this.windowWidth = window.innerWidth;\r\n        let space1 = 0; \r\n        let space2 = 0;\r\n        if(this.windowWidth < this.options.mobileFinish){\r\n            this.mobile = true;\r\n            if(this.options.mobileNavHeight){\r\n                space1 = this.conteinerHight;\r\n            }\r\n\r\n            space2 = this.options.mobileMarginNav;\r\n        }\r\n        else {\r\n            this.mobile = false;\r\n            if(this.options.navHeight){\r\n                space1 = this.conteinerHight;\r\n            }\r\n\r\n            space2 = this.options.marginNav;\r\n        }\r\n\r\n        this.space = space1 + space2;\r\n\r\n        return [{mobile: this.mobile},{windowWidth: this.windowWidth}]\r\n    }\r\n\r\n    #controllClass(){\r\n        if (typeof this.avtiveElement != undefined && this.avtiveElement != null) {\r\n            if(!this.avtiveElement.classList.contains(this.options.activeClass)){\r\n                this.elements.forEach(element => {\r\n                    element.classList.remove(this.options.activeClass);\r\n                });\r\n                this.avtiveElement.classList.add(this.options.activeClass);\r\n                this.activeFlag = true;\r\n            }\r\n        }else {\r\n            if(this.activeFlag){\r\n                this.#removeClassActive();\r\n            }\r\n        }\r\n    }\r\n\r\n    #removeClassActive(){\r\n        this.elements.forEach(element => {\r\n            element.classList.remove(this.options.activeClass);\r\n        });\r\n        this.activeFlag = false;\r\n    }\r\n\r\n    #actionOnScroll = () => {\r\n        this.positionTop = window.scrollY;\r\n        this.scrollFlag = (this.positionTop >= this.lastScrollTop) ? true : false;\r\n        this.lastScrollTop = this.positionTop;\r\n        this.visibleFirst = false;\r\n        this.notViseble = true;\r\n\r\n        this.allBox.forEach((element, i) => {\r\n            this.goToBoxPosition = element.getBoundingClientRect().y + window.scrollY - this.space;\r\n            this.windowHeight = window.innerHeight;\r\n            this.bodyHeight = this.WFSnavBody.offsetHeight;\r\n\r\n            if(this.scrollFlag){\r\n                if (this.goToBoxPosition - this.space - (element.getBoundingClientRect().height/ (100/this.options.showDown)) <= this.positionTop && this.positionTop + this.windowHeight > this.goToBoxPosition) {\r\n                    this.avtiveElement = document.querySelector(`[${this.dataAttrlink}=\"${element.getAttribute(this.dataAttrbox)}\"]`);\r\n                    this.avtiveElementCount = i;\r\n                }\r\n            }else {\r\n                if(!this.visibleFirst){\r\n                    if (this.goToBoxPosition  <= this.positionTop && this.goToBoxPosition + this.space + (element.getBoundingClientRect().height / (100/this.options.showUp)) >= this.positionTop) {\r\n                        this.avtiveElement = document.querySelector(`[${this.dataAttrlink}=\"${element.getAttribute(this.dataAttrbox)}\"]`);\r\n                        this.avtiveElementCount = i;\r\n                        this.visibleFirst = true;\r\n                    }else {\r\n                        if(this.positionTop <= this.goToBoxPosition && this.positionTop + this.windowHeight > this.goToBoxPosition){\r\n                            this.avtiveElement = document.querySelector(`[${this.dataAttrlink}=\"${element.getAttribute(this.dataAttrbox)}\"]`);\r\n                            this.avtiveElementCount = i;\r\n                            this.visibleFirst = true;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if(this.avtiveElementCount == 0){\r\n                if(this.allBox[0].getBoundingClientRect().y >= this.windowHeight - this.space - (this.allBox[0].getBoundingClientRect().height/ (100/this.options.showDown))){\r\n                    this.avtiveElement = null\r\n                }\r\n            }\r\n\r\n            if(this.avtiveElementCount == this.navLinkCount){\r\n                if(this.allBox[this.navLinkCount].getBoundingClientRect().y + this.allBox[this.navLinkCount].getBoundingClientRect().height < 0){\r\n                    this.avtiveElement = null\r\n                }\r\n            }\r\n\r\n            this.#controllClass();\r\n        });\r\n    }\r\n\r\n    onScroll(){\r\n        const wfsNavArry = [\r\n            {navElements: this.elements},\r\n            {navLinkLength: this.navLinkLength},\r\n            {avtiveElement: this.avtiveElement},\r\n            {avtiveElementCount: this.avtiveElementCount},\r\n            {sections: this.allBox},\r\n        ];\r\n\r\n        return wfsNavArry;\r\n    }\r\n\r\n    #scrollWindow(){\r\n        window.addEventListener('scroll', this.#actionOnScroll)\r\n    }\r\n\r\n    #resizeWindowFunction = () => {\r\n        const _this = this;\r\n        let _time;\r\n        if(_time) clearTimeout(_time);\r\n        _time = setTimeout(function(){\r\n            _this.windowHeight = window.innerHeight;\r\n            _this.bodyHeight = _this.WFSnavBody.clientHeight;\r\n\r\n            _this.#checkMobile();\r\n        }, 500);\r\n    }\r\n\r\n    #resizeWindow(){\r\n        window.addEventListener('resize', this.#resizeWindowFunction);\r\n    }\r\n\r\n    #fingIdElement(trigger){\r\n        this.attrElement = trigger.getAttribute('href');\r\n        this.fPrefix = this.attrElement.substring(0, this.options.typePath.length);\r\n        this.elId = this.attrElement.slice(this.options.typePath.length);\r\n    }\r\n\r\n    #scrollToBox(trigger){\r\n        this.#fingIdElement(trigger);\r\n        \r\n        if(this.fPrefix === this.options.typePath){\r\n            this.goToBox = document.getElementById(this.elId);\r\n            this.#scrollWindowTo(this.goToBox.getBoundingClientRect().y + window.scrollY - this.space);\r\n        }\r\n    }\r\n\r\n    #clickElement(element, event){\r\n        event.preventDefault();\r\n        this.#scrollToBox(element);\r\n        this.closeMobileNav(); \r\n    }\r\n\r\n    #setupGoto(){\r\n        this.listenersElement = new Map();\r\n\r\n        Array.from(this.elements).forEach((element, i) => {\r\n            this.#fingIdElement(element);\r\n            document.getElementById(this.elId).setAttribute(this.dataAttrbox, this.elId);\r\n            element.setAttribute(this.dataAttrlink, this.elId);\r\n\r\n            const handleClick = (event) => this.#clickElement(element, event);\r\n\t\t\tthis.listenersElement.set(element, handleClick);\r\n\t\t\telement.addEventListener('click', handleClick);\r\n        })\r\n    }\r\n\r\n    // START CLOSE ------------------------------------------------------------------\r\n\r\n    closeMobileNav(){\r\n        this.WFSnavBody.classList.remove(this.options.mobileCloseCl)\r\n    }\r\n\r\n    openMobileNav(){\r\n        this.WFSnavBody.classList.add(this.options.mobileCloseCl)\r\n    }\r\n\r\n    #clickOpenClose(event){\r\n        event.preventDefault();\r\n\r\n        if(!this.WFSnavBody.classList.contains(this.options.mobileCloseCl)){\r\n            this.openMobileNav();\r\n        }else{\r\n            this.closeMobileNav();\r\n        }\r\n    }\r\n\r\n    #createIventOpenClose(){\r\n        this.listeners = new Map();\r\n\r\n        Array.from(this.closeOpenLink).forEach((element, i) => {\r\n            const handleClick = (event) => this.#clickOpenClose(event);\r\n            this.listeners.set(element, handleClick);\r\n            element.addEventListener('click', handleClick);\r\n        });\r\n    }\r\n\r\n    #destroyIventOpenClose(){\r\n        this.closeMobileNav();\r\n\t\tArray.from(this.closeOpenLink).forEach((element, i) => {\r\n\t\t\tconst handleClick = this.listeners.get(element);\r\n\t\t\tif (handleClick) {\r\n\t\t\t\telement.removeEventListener('click', handleClick);\r\n\t\t\t\tthis.listeners.delete(element);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n    #destroyElements(){\r\n        Array.from(this.elements).forEach((element, i) => {\r\n            const handleClick = this.listenersElement.get(element);\r\n            if (handleClick) {\r\n                element.removeEventListener('click', handleClick);\r\n                this.listenersElement.delete(element);\r\n            }\r\n            element.removeAttribute(this.dataAttrlink);\r\n        });\r\n    }\r\n\r\n    #destroyBox(){\r\n        Array.from(this.allBox).forEach(element => {\r\n            element.removeAttribute(this.dataAttrbox);\r\n        });\r\n    }\r\n\r\n    // END CLOSE --------------------------------------------------------------------\r\n\r\n    destroy(){\r\n        if(this.elements){\r\n            this.#destroyElements();\r\n            this.#removeClassActive();\r\n            this.#destroyBox();\r\n            window.removeEventListener('resize', this.#resizeWindowFunction);\r\n            window.removeEventListener('scroll', this.#actionOnScroll);\r\n            if(this.closeOpenLink.length) this.#destroyIventOpenClose();\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]}